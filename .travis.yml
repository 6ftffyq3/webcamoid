language: cpp

cache:
  ccache: true
  timeout: 1000
  directories:
    - keystores

env:
  global:
    - QTVER=5.14.1
    - PPAQTVER=514
    - QTIFWVER=3.2.2
    - APPIMAGEVER=12
    - ARCH_ROOT_DATE=2020.04.01
    - ARCH_ROOT_URL=https://mirror.rackspace.com/archlinux
    - FFMPEG_VERSION=4.2.2
    - SDKVER=6200805
    - NDKVER=r21
    - ANDROID_BUILD_TOOLS_VERSION=29.0.3
    # BT_KEY
    - secure: "QfvmzBwPIME/qnP5qtqCNElE3a+1o7k2WPWqtkkr3/pk0Q41JvcwSw83JN55d2pSpXkW4y7rsGwAJnUcwwEYbb+xVWEsutn2JxTz79Q+BBXKISIAQoleux49Yy7JsfwLD3VbDKROKzwkn2DJk6kedoqZmL1vJfS5Njv2aOAP9waeC1Tr7At5oSxd4be8OCZ0lydgxyDcJnnWQXXKOT3o2TWq62vZ5fByUZ5eVrrpxq/1s9i8txb49JlqpxdthP/QjfQbI6mM93FkU1xwK5TcERIvswS3WbxxvYJZtRF0ucPRSBLhdwMY9ybpdfwJcSu+WetIO9qbv31ehJpommEyHMR621yDcpk7byiar+51T3wEoaZ75dbU0bPaH1nRJ/TP8TZzX75LTRs4Cf6wKHoH0Tlg1WhW+TFnjexMP9u9kYE0kFHowUDZBRkJTQdBs4FHiJaW9MF85K0ZFzEYs2u7b+8rFNNG4FIGNttN2U+UHPawEJeZ8vYSPEbdqBF2UvlgA8XUKkinGI07q0D8pZrUV0or3CbV+CmAXuWbco4VjOIJUz411JiVy3HxXWFBuon4t4uWGzA2ook8NrHttZzQrZDlNIc9RTsRvPiwgQMzxIxVGDqD/agrpVq5TrshMXcR5Y7IY9Yd4J771qgSAzy8wANDHOWX989bxB8eN9g5Rv4="

matrix:
  include:
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ARCH_ROOT_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=x86_64
      - DAILY_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=i686
      - DAILY_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=x86_64
      - RELEASE_BUILD=1
  - os: linux
    dist: bionic
    compiler: gcc
    env:
      - ARCH_ROOT_BUILD=1
      - ARCH_ROOT_MINGW=i686
      - RELEASE_BUILD=1
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=debian:testing
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=debian:testing
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=fedora
      - DOCKERIMG=fedora:rawhide
      - FEDORAVER=rawhide
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=fedora
      - DOCKERIMG=fedora:rawhide
      - FEDORAVER=rawhide
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=opensuse
      - DOCKERIMG=opensuse/tumbleweed
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=opensuse
      - DOCKERIMG=opensuse/tumbleweed
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:bionic
      - DAILY_BUILD=1
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:bionic
      - RELEASE_BUILD=1
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:eoan
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:eoan
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: gcc
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:focal
  - os: linux
    dist: bionic
    services:
      - docker
    compiler: clang
    env:
      - DOCKERSYS=debian
      - DOCKERIMG=ubuntu:focal
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
      - DAILY_BUILD=1
  - os: osx
    osx_image: xcode10
    compiler: clang
    env:
      - RELEASE_BUILD=1
  - os: osx
    osx_image: xcode10.1
    compiler: clang
  - os: osx
    osx_image: xcode10.2
    compiler: clang
  - os: osx
    osx_image: xcode10.3
    compiler: clang
  - os: osx
    osx_image: xcode11
    compiler: clang
  - os: osx
    osx_image: xcode11.1
    compiler: clang
  - os: osx
    osx_image: xcode11.2
    compiler: clang
  - os: osx
    osx_image: xcode11.3
    compiler: clang
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=armeabi-v7a
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=arm64-v8a
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=x86
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=x86_64
  - os: linux
    dist: bionic
    compiler: clang
    env:
      - ANDROID_BUILD=1
      - ANDROID_PLATFORM=24
      - COMPILER=clang
      - TARGET_ARCH=armeabi-v7a:arm64-v8a:x86:x86_64
      - DAILY_BUILD=1

before_install: |
  if [ -z "${ANDROID_BUILD}" ]; then
    if [ "${TRAVIS_OS_NAME}" = linux ] && [ -z "${ARCH_ROOT_BUILD}" ]; then
      docker pull ${DOCKERIMG}
      docker ps -a
      docker run --privileged -it -d -v ${PWD}:/sources -v $HOME/.ccache:/ccache -e CCACHE_DIR=/ccache -w /sources --name ${DOCKERSYS} ${DOCKERIMG} /bin/sh
    elif [ "${TRAVIS_OS_NAME}" = osx ]; then
      brew unlink python
      brew update
      brew upgrade
      brew link --overwrite numpy
    fi
  fi

install:
  - chmod +x ports/ci/travis/install_deps.sh
  - ports/ci/travis/install_deps.sh

before_script: |
  if [ "${ANDROID_BUILD}" = 1 ]; then
    export COMPILESPEC=android-${COMPILER}
  elif [ "${ARCH_ROOT_BUILD}" = 1 ] && [ ! -z "${ARCH_ROOT_MINGW}" ]; then
    export CXX=${ARCH_ROOT_MINGW}-w64-mingw32-g++
    export COMPILESPEC=win32-g++
  elif [ "${TRAVIS_OS_NAME}" = linux ]; then
    if [ "${CXX}" = g++ ]; then
      export COMPILESPEC=linux-g++
    elif [ "${CXX}" = clang++ ]; then
      export COMPILESPEC=linux-clang
    fi
  elif [ "${TRAVIS_OS_NAME}" = osx ]; then
    brew link --force qt5
    if [ "${CXX}" = g++ ]; then
      export COMPILESPEC=macx-g++
    elif [ "${CXX}" = clang++ ]; then
      export COMPILESPEC=macx-clang
    fi
  fi

script:
  - chmod +x ports/ci/travis/build.sh
  - ports/ci/travis/build.sh

after_success:
  - chmod +x ports/ci/travis/deploy.sh
  - ports/ci/travis/deploy.sh
  - chmod +x ports/ci/travis/upload.sh
  - ports/ci/travis/upload.sh

branches:
  only:
    - master

notifications:
  recipients:
    - hipersayan.x@gmail.com
  email:
    on_success: change
    on_failure: change
